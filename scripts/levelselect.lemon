constant array<u64> LSNames = // default ordering
{
	"angel island", "[ZONE 2]", "marble garden", "carnival night", "[ZONE 5]", "launch base", "[ZONE 7]", "flying battery", "sandopolis",
	"lava reef", "hidden palace", "sky sanctuary", "death egg", "[ZONE 14]", "bonus stage", "special stage", "sound test"
}

constant array<u64> LSNames_OGOrder = // prototype ordering, flying battery is after carnival night
{
	"angel island", "[ZONE 2]", "marble garden", "carnival night", "flying battery", "[ZONE 5]", "launch base", "[ZONE 7]", "sandopolis",
	"lava reef", "hidden palace", "sky sanctuary", "death egg", "[ZONE 14]", "bonus stage", "special stage", "sound test"
}

constant array<u64> HCZNames = // replaces "[ZONE 2]"
{
	"hydrocity", "hydro city", "hydrossity", "toilet town"
}

constant array<u64> ICZNames = // replaces "[ZONE 5]"
{
	"icecap", "ice cap", "mount shiver"
}

constant array<u64> MHZNames = // replaces "[ZONE 7]"
{
	"mushroom valley", "mushroom hill", "mushroom forest"
}

constant array<u64> DDZNames = // replaces "[ZONE 14]"
{
	"doomsday", "the doomsday"
}

constant array<u64> LSNames_2P = // used in the "extra menu" when pressing keys/buttons mapped to Y
{
	"azure lake", "balloon park", "chrome gadget", "desert palace", "endless mine", "hidden palace altar", "game ending"
}

constant array<u64> LSNumbers = // used for the act numbers next to a zone name
{
	"1", "2", "[BOSS TEXT]", "s", "k", "1", "2", "3", "g", "r", "s", "a", "b", "c", "s3", "s&k"
}

constant array<u64> LSBossText = // replaces "[BOSS TEXT]"
{
	"3", "x", "boss", "{}"
}

//# address-hook(0x007a74) end(0x007d20)
//# translated(0x007d64) end(0x007d6a)
function void LevelSelect()
{
	global.zone_act = 0x0000
	global.zone_act.apparent = 0x0000
	Game.endSkippableCutscene()
	if (!LS_FORCE_BASE && !Mods.isModActive("Sonic 3 Complete Level Select+"))
	{
		FadeOutScreenBlocking()
	#if STANDALONE
		Renderer.resetSprites()
	#else
		set_status_register(0x2700)
	#endif
		LevelSelect.init()

		Menu.FadeInAfterInit()

		// Perform main update now
		bool running = true
		while (running)
		{
			// End point for a single frame
			//  -> Right here we place the entry point for the standalone version
			waitForNextFrame()
		@EntryPoint:

			running = LevelSelect.innerUpdate()
		}
	}
	else
	{
		Renderer.resetSprites()
		base.LevelSelect()
	}
}

// yes this is just the base code above. i have no idea why but it breaks in D.A. Garden if it's not there.
// i'm not taking any risks. sorry not sorry other script modders

function string RenderExtraCharIcon(u8 xtrachar)
{
	if (Mods.isModActive("Sonic 3 Complete Level Select+"))
		return base.RenderExtraCharIcon(xtrachar)
	else return " "
}

function void Renderer.drawLSText(u64 FONT_LS, u64 FONT_LS_Y)
{
	u16 widthextend = 0
	if (!LS_ICONS)
		widthextend = getScreenExtend()
	if (EM_2PSTAGES)
		{
			u16 height = 8
			for (u8 i; i < LSNames_2P.length(); ++i)
			{
				u64 zonename = LSNames_2P[i]
				if (levelselect.selection == i)
					u64 font = FONT_LS_Y
				else
					font = FONT_LS
				Renderer.drawText(font, 16, height, zonename, 0xFFFFFFFF, 1, 0, 0x9f7e, true)
				height += 24
			}
		}
		else
		{
			u16 xposition = 16
			u16 yposition = 8
			for (u8 i = 0; i < (LSNames.length()-1); i++)
			{
				if (i == 9)
				{
					xposition = 176
					yposition = 8
				}
				if ((!LS_ZONEORDER && !Mods.isModActive("Sonic 3 Complete Level Select+")) || (Mods.isModActive("Sonic 3 Complete Level Select+") && System.getGlobalVariableValueByName("S3Complete_SoundTest_Order") == 0))
					u64 zonename = LSNames[i]
				else
					zonename = LSNames_OGOrder[i]
				if (zonename == "[ZONE 2]") // HCZ Names
					zonename = HCZNames[LS_HCZ]
				else if (zonename == "[ZONE 5]") // ICZ Names
					zonename = ICZNames[LS_ICZ]
				else if (zonename == "[ZONE 7]") // MHZ Names
				{
					if (!Mods.isModActive("Sonic 3 Complete Level Select+"))
						zonename = MHZNames[LS_MHZ]
					else
						zonename = MHZNames[System.getGlobalVariableValueByName("S3Complete_SoundTest_MVZ") * (System.getGlobalVariableValueByName("S3Complete_SoundTest_MVZ") < 2 ? -1 : 1) + (System.getGlobalVariableValueByName("S3Complete_SoundTest_MVZ") < 2 ? 1 : 0)]
				}
				else if (zonename == "[ZONE 14]") // DDZ Names
				{
					if (!Mods.isModActive("Sonic 3 Complete Level Select+"))
						zonename = DDZNames[LS_DDZ]
					else
						zonename = DDZNames[System.getGlobalVariableValueByName("S3Complete_SoundTest_DDZ")]
				}
				u8 test = 0 // i forgot what this variable does but it probably breaks something so it remains
				if ((levelselect.selection / 2) - (levelselect.selection == 0x20 ? 1 : 0) == i && (levelselect.selection != 0x14 && levelselect.selection != 0x1a && levelselect.selection != 0x1e))
					u64 font = FONT_LS_Y
				else if ((i == 9 && levelselect.selection == 0x14) || (i == 12 && levelselect.selection == 0x1a) || (i == 14 && levelselect.selection == 0x1e))
				{
					font = FONT_LS_Y
					test = 1
				}
				else font = FONT_LS
				Renderer.drawText(font, xposition+widthextend, yposition, zonename, 0xFFFFFFFF, 1, 0, 0x9f7e, true)
				u16 numberXposition = xposition + 120
				u16 numberYposition = yposition
				u8 LSCount = 2
				if (i == 9 || i == 12 || i == 14)
					LSCount = 3
				for (u8 j = 0; j < LSCount; j++)
				{
					u64 numberfont
					u8 offset = 0
					if (i == 11)
					{
						if (LS_SSZ == 1 && !(Mods.isModActive("Sonic 3 Complete Level Select+")))
							offset += 3
						else if (LS_SSZ == 2 || (Mods.isModActive("Sonic 3 Complete Level Select+")))
							offset += 11
					}
					if (i == 14)
					{
						offset += 5
						if (LS_BONUS == 1 || LS_BONUS == 2 || Mods.isModActive("Sonic 3 Complete Level Select+"))
							offset += 3
						else if (LS_BONUS == 3 && !Mods.isModActive("Sonic 3 Complete Level Select+"))
							offset += 6
					}
					if (i == 15)
					{
						if (LS_SPECIAL == 1 && !(Mods.isModActive("Sonic 3 Complete Level Select+")))
							offset += 3
						else if (LS_SPECIAL == 2 && !(Mods.isModActive("Sonic 3 Complete Level Select+")))
						{
							numberXposition -= 8
							offset += 14
						}
						else if (LS_SPECIAL == 3 || (Mods.isModActive("Sonic 3 Complete Level Select+")))
							offset += 11
					}
					if (levelselect.selection/2 - (levelselect.selection == 0x20 ? 1 : 0) == i)
					{
						if (j == 0 && levelselect.selection % 2 == 0 && levelselect.selection < 0x1e || j == 0 && levelselect.selection % 2 != 0 && levelselect.selection >= 0x1f)
							numberfont = FONT_LS_Y
						else if (j == 1 && levelselect.selection % 2 != 0 && levelselect.selection < 0x1f || j == 1 && levelselect.selection % 2 == 0 && levelselect.selection >= 0x1f)
							numberfont = FONT_LS_Y
						else
							numberfont = FONT_LS
					}
					else if (test && j == 2)
						numberfont = FONT_LS_Y
					else
						numberfont = FONT_LS
					u64 number = LSNumbers[j+offset]
					if (number == "[BOSS TEXT]")
					{
						if (!Mods.isModActive("Sonic 3 Complete Level Select+"))
						{
							number = LSBossText[LS_BOSS]
							if (LS_BOSS == 3)
								numberXposition -= 8
							else if (LS_BOSS == 2)
								numberXposition -= 24
						}
						else number = LSBossText[1]
					}
					else if (number == "r" && (LS_BONUS == 2 || Mods.isModActive("Sonic 3 Complete Level Select+")))
						number = "m"
					if (i != 10 && i != 13)
						Renderer.drawText(numberfont, numberXposition+widthextend, numberYposition, number, 0xFFFFFFFF, 1, 0, 0x9f7e, true)
					numberYposition += 8
				}
				yposition += 24
			}
		}
		
		// sound test values
		// this determines whether the text will be highlighted or not, since this isn't a zone in the game (no worrying about an act 2)
		u64 determineSTcolor
		if (levelselect.selection == 0x21)
			determineSTcolor = FONT_LS_Y
		else
			determineSTcolor = FONT_LS
		if (ST_STYLE == 1)
		{
			Renderer.drawText(determineSTcolor, 264+widthextend, 176, "<   >", 0xFFFFFFFF, 1, 0, 0xFFFD, true)
			s32 xpos = 272
			if (levelselect.soundtest < 100)
			{
				Renderer.drawText(determineSTcolor, xpos+widthextend, 176,(stringformat("%d", levelselect.soundtest/100)), 0xFFFFFFFF, 1, 0, 0xFFFD, true)
				xpos += 8
			}
			if (levelselect.soundtest < 10)
			{
				Renderer.drawText(determineSTcolor, xpos+widthextend, 176,(stringformat("%d", levelselect.soundtest/10)), 0xFFFFFFFF, 1, 0, 0xFFFD, true)
				xpos += 8
			}
			Renderer.drawText(determineSTcolor, xpos+widthextend, 176,(stringformat("%d", levelselect.soundtest)), 0xFFFFFFFF, 1, 0, 0xFFFD, true)
		}
		else
		{
			Renderer.drawText(determineSTcolor, 272+widthextend, 176, "*  *", 0xFFFFFFFF, 1, 0, 0xFFFD, true)
			s32 xpos = 280
			if (levelselect.soundtest < 0x10)
			{
				Renderer.drawText(determineSTcolor, xpos+widthextend, 176,(stringformat("%x", levelselect.soundtest/0x10)), 0xFFFFFFFF, 1, 0, 0xFFFD, true)
				xpos += 8
			}
			Renderer.drawText(determineSTcolor, xpos+widthextend, 176,(stringformat("%x", levelselect.soundtest)), 0xFFFFFFFF, 1, 0, 0xFFFD, true)
		}
		Renderer.drawText(determineSTcolor, 176+widthextend, 176, LSNames[16], 0xFFFFFFFF, 1, 0, 0xFFFD, true)
}

function void ScareAwayTheHaters()
{
	if (Mods.isModActive("Sonic 3 Complete Sound Test") || Mods.isModActive("extended level select") && !LS_FORCE_BASE)
	{
		if (Mods.getModPriority("Sonic 3 A.I.R. with Extra Mushrooms") > Mods.getModPriority("Sonic 3 Complete Sound Test"))
		{
			playMusic(MUSIC_CTRL_STOP)
			ScaredHaters = 1
			Standalone.playAudio(0xB2)
		}
		else if (Mods.getModPriority("Sonic 3 A.I.R. with Extra Mushrooms") > Mods.getModPriority("extended level select"))
		{
			playMusic(MUSIC_CTRL_STOP)
			ScaredHaters = 1
			Standalone.playAudio(0xB2)
		}
	}
	else
	{
		if (ScaredHaters != 1)
		{
			playLevelSelectMusic()
			EM_CHAOSEMERALDS = 0
			EM_2PSTAGES = 0
		}
	}
}

function void playLevelSelectMusic()
{
	//if (!initiateStandaloneCredits)
	{
		if (LS_MUSIC != 0)
			playMusic(MUSIC_CTRL_STOP)
		if (LS_MUSIC == 1 || (LS_MUSIC == 2) && !Mods.isModActive("Custom Theme for Data Select & Level Select"))
			Audio.playAudio("em_levelselect", AudioContext.CONTEXT_MUSIC)
		else if (LS_MUSIC == 2)
				playMusic(0xfe)
		else if (LS_MUSIC == 3)
			Audio.playAudio("custom_levelselect", AudioContext.CONTEXT_MUSIC)
		else if (LS_MUSIC == 4 || (LS_MUSIC == 5 && !(Mods.isModActive("Sound Additions") || Mods.isModActive("Sound Additions Plus"))))
			if (Game.getSetting(SETTING_AUDIO_CONTINUE_SCREEN) == 0)
				Audio.playAudio("28_sonic3", AudioContext.CONTEXT_MUSIC)
			else Audio.playAudio(MUSIC_CONTINUE, AudioContext.CONTEXT_MUSIC)
		else if (LS_MUSIC == 5)
			Audio.playAudio("bs_start", AudioContext.CONTEXT_MUSIC)
		else
			playMusic(MUSIC_DATASELECT)
	}
	/*
	else
	{
		playMusic(MUSIC_CTRL_STOP)
		Audio.playAudio("26_proto", AudioContext.CONTEXT_MUSIC)
	}
	*/
}

function void DrawLevelSelectBG()
{
	u16[0xfffffc00] = 0x0000
	u64 prefix_key // origins or not
	u64 suffix_key // S2/3, S3C, S3A (in S3C), S&K (in S3C), EM, or EM (alt)
	u64 py = 0
	if (Mods.isModActive("Origins Title + Menu Backgrounds") || Mods.isModActive("Polished Sprites"))
	{
		prefix_key = "origins_"
		py -= 8
	}
	if (LS_BG == 1) // S3C
		suffix_key = "s3c"
	else if (LS_BG == 2) // S3A
		suffix_key = "s3a"
	else if (LS_BG == 3) // S&K, currently unused because of the new idea i had
		suffix_key = "s&k"
	else if (LS_BG == 4) // EM
		suffix_key = "em"
	else // EM ALT
		suffix_key = "priorityissue"
	if (!Mods.isModActive("Sonic 3 Complete Level Select+")) // background overlap fix
	{
		if (LS_BG != 3)
			Renderer.drawCustomSprite(stringformat("%sls_%s", prefix_key, suffix_key), s16(getScreenWidth() - 512)/2, py, 0x00, 0, 0x1000)
		Renderer.drawCustomSprite("ls_s&k", s16(getScreenWidth() - 512)/2, py, 0x00, 0, 0x1000)
	}
}

function void DrawSpritesToLevelSelect()
{
	loadCharacterPalette(CHARACTER_SONIC,    0x802180, 0) // normal
	loadCharacterPalette(CHARACTER_SONIC,    0x802000, 0) // fading
	loadCharacterPalette(CHARACTER_TAILS,    0x8021c0, 0) // normal
	loadCharacterPalette(CHARACTER_TAILS,    0x802040, 0) // fading
	loadCharacterPalette(CHARACTER_KNUCKLES, 0x802200, 0) // normal
	loadCharacterPalette(CHARACTER_KNUCKLES, 0x802080, 0) // fading
	u16 widthextend = 0
	if (!LS_ICONS)
		widthextend = getScreenExtend()+4
	u16 beginningOfText = getScreenHeight()/2 - 80

	// kid you not, this is probably the best way i could've handled the font selection system
	u64 FONT_LS
	u64 FONT_LS_Y
	if (LS_FONT == 1)
	{
		FONT_LS = "ls_font_3c"
		FONT_LS_Y = "ls_font_y_3c"
	}
	else if (LS_FONT == 2)
	{
		FONT_LS = "ls_font_custom"
		FONT_LS_Y = "ls_font_y_custom"
	}
	else
	{
		FONT_LS = "ls_font"
		FONT_LS_Y = "ls_font_y"
	}

	if (ScaredHaters == 1)
	{
		scareTheHaters(FONT_LS)
	}
	if (LS_BG != 0)
		DrawLevelSelectBG()
	// render the text
	if (ScaredHaters == 0)
		Renderer.drawLSText(FONT_LS, FONT_LS_Y)
	//Renderer.drawCustomSprite("ls_text", 0, 0, 0x00, 0, 0x1000)
	if (ScaredHaters != 1)
	{
		u8 ExtraSlotStart = 4
		if (Game.isSecretUnlocked(SECRET_KNUX_AND_TAILS))
			++ExtraSlotStart
		u16 character_num = levelselect.characters
		#if EXTRA_CHARACTERS_ACTIVE
			#if EXTRA_CHARACTERS_UNLIMITED
					if (levelselect.xtrachar)
					{
						character_num = ExtraSlotStart-1 + u16(global.xtrachar)
						//Renderer.drawText(FONT_LS_Y, (getScreenWidth()-104)-52+widthextend, getScreenHeight()-24,"id", 0xFFFFFFFF, 3, 0, 0xFFFD, true) //very important
						//Renderer.drawText(FONT_LS, (getScreenWidth()-104)-28+widthextend, getScreenHeight()-24,(stringformat("%d", u16(global.xtrachar))), 0xFFFFFFFF, 3, 0, 0xFFFD, true)
					}
			#endif
		#endif
		Renderer.drawText(FONT_LS_Y, (getScreenWidth()-104)-64+widthextend, getScreenHeight()-16,(stringformat("%d", (character_num / 100) % 10)), 0xFFFFFFFF, 1, 0, 0xFFFD, true) //100s place
		Renderer.drawText(FONT_LS_Y, (getScreenWidth()-104)-56+widthextend, getScreenHeight()-16,(stringformat("%d", (character_num / 10) % 10)), 0xFFFFFFFF, 1, 0, 0xFFFD, true) //10s place
		Renderer.drawText(FONT_LS_Y, (getScreenWidth()-104)-48+widthextend, getScreenHeight()-16,(stringformat("%d", character_num % 10)), 0xFFFFFFFF, 1, 0, 0xFFFD, true) //1s place

		#if EXTRA_CHARACTERS_ACTIVE
			#if EXTRA_CHARACTERS_UNLIMITED
				if (levelselect.characters < ExtraSlotStart && !levelselect.xtrachar)
			#endif
		#endif
				{
					u8 continueicon = 0
					if (levelselect.characters > 0)
						++continueicon
					Renderer.drawCustomSprite(getCharacterContinueIcon(levelselect.characters-continueicon), getScreenWidth()-112+widthextend, getScreenHeight()-8, 0x00, 0, 0x9f7e)
					if (levelselect.characters == 0 || (levelselect.characters == 4 && ExtraSlotStart == 5))
						Renderer.drawCustomSprite(getCharacterContinueIcon(1), getScreenWidth()-128+widthextend, getScreenHeight()-8, 0x00, 0, 0x9f7e)
		#if !EXTRA_CHARACTERS_ACTIVE
					else if (levelselect.characters > ExtraSlotStart)
					{
						if ((levelselect.characters == ExtraSlotStart+1) && Mods.isModActive("Extra Slot Mighty"))
						{
							Renderer.drawCustomSprite("Continue_icon_S3_alt", (getScreenWidth()-102)+widthextend, (getScreenHeight()-7), 0x00, 0, 0x9f7e)
						}
						else if ((levelselect.characters == ExtraSlotStart+2 || (levelselect.characters == ExtraSlotStart+1 && !Mods.isModActive("Extra Slot Mighty"))) && Mods.isModActive("Extra Slot Ray"))
						{
							u16[0xfffffc00 + 0x02] = 0x0eee
							u16[0xfffffc00 + 0x1e] = 0x0222
							Renderer.drawCustomSprite("continue_icon_Ray_S3_alt", (getScreenWidth()-104)+widthextend, (getScreenHeight()-9), 0x00, 0, 0x9f7e)
						}
						else Renderer.drawCustomSprite("unknown_extraslot", (getScreenWidth()-104)-11+widthextend, (getScreenHeight()-8)-24, 0x00, 0, 0x9f7e)
					}
				}
		#else
			#if EXTRA_CHARACTERS_UNLIMITED
				}
				if (global.xtrachar)
				{
					if !(Renderer.hasCustomSprite(stringformat("em_slot%d", global.xtrachar)))
					{
						u64 key = getCharacterContinueIcon(global.xtrachar)
						if (global.xtrachar == 0x01 && Mods.isModActive("Extra Slot Mighty"))
							key = "em_mighty"
						else if (global.xtrachar == 0x02 && Mods.isModActive("Extra Slot Ray"))
							key = "em_ray"
						else if (global.xtrachar == 0x03 && Mods.isModActive("Extra Slot Amy"))
							key = "em_amy"
						if (Renderer.hasCustomSprite(key))
							Renderer.drawCustomSprite(key, getScreenWidth()-112+widthextend, getScreenHeight()-8, (key == getCharacterContinueIcon(global.xtrachar) ? getatex(global.xtrachar)+0x41 : 0x00), 0, 0x9f7e)
						else Renderer.drawCustomSprite("unknown_extraslot", (getScreenWidth()-104)-11+widthextend, (getScreenHeight()-8)-24, 0x00, 0, 0x9f7e)
					}
					else Renderer.drawCustomSprite(stringformat("em_slot%d", global.xtrachar), getScreenWidth()-112+widthextend, getScreenHeight()-8, 0x00, 0, 0x9f7e)
				}
			#endif
		#endif
		u8 miles_check = (global.region_code & 0x80) ? 0x39ab6a : 0x39aa18
		if (LS_ICONS)
		{
			if (levelselect.selection < 0x05 && EM_2PSTAGES)
				Renderer.drawCustomSprite(stringformat("ls_icon_%d_2p", levelselect.selection), getScreenWidth()-64, getScreenHeight()-44, 0x00, 0, 0x9f7e)
			else if (levelselect.selection < 0x10 && levelselect.selection > 0x07 && ((LS_ZONEORDER && !Mods.isModActive("Sonic 3 Complete Level Select+")) || (Mods.isModActive("Sonic 3 Complete Level Select+") && System.getGlobalVariableValueByName("S3Complete_SoundTest_Order") == 1)) && !EM_2PSTAGES)
				Renderer.drawCustomSprite(stringformat("ls_icon_%d_a", levelselect.selection/2), getScreenWidth()-64, getScreenHeight()-44, 0x00, 0, 0x9f7e)
			else if (levelselect.selection < 0x21 && levelselect.selection != 0x1a && levelselect.selection != 0x14 && (levelselect.selection < 0x1c) && !EM_2PSTAGES)
				Renderer.drawCustomSprite(stringformat("ls_icon_%d", levelselect.selection/2), getScreenWidth()-64, getScreenHeight()-44, 0x00, 0, 0x9f7e)
			else
			{
				if (levelselect.selection == 0x05 && EM_2PSTAGES)
					Renderer.drawCustomSprite("ls_icon_10", getScreenWidth()-64, getScreenHeight()-44, 0x00, 0, 0x9f7e)
				if (levelselect.selection == 0x06 && EM_2PSTAGES)
					Renderer.drawCustomSprite("ls_characters", getScreenWidth()-64, getScreenHeight()-44, 0x00, 0, 0x9f7e)
				if (levelselect.selection == 0x14)
					Renderer.drawCustomSprite("ls_icon_9", getScreenWidth()-64, getScreenHeight()-44, 0x00, 0, 0x9f7e)
				else if (levelselect.selection == 0x1a)
					Renderer.drawCustomSprite("ls_icon_12", getScreenWidth()-64, getScreenHeight()-44, 0x00, 0, 0x9f7e)
				else if (levelselect.selection == 0x1c || levelselect.selection == 0x1d || levelselect.selection == 0x1e)
					Renderer.drawCustomSprite(stringformat("ls_bonus_%x", levelselect.selection - 0x1c), getScreenWidth()-64, getScreenHeight()-44, 0x00, 0, 0x9f7e)
				else if (levelselect.selection == 0x1f || levelselect.selection == 0x20)
					Renderer.drawCustomSprite(stringformat("ls_special_%x", levelselect.selection - 0x1f), getScreenWidth()-64, getScreenHeight()-44, 0x00, 0, 0x9f7e)
			}
			// sound test	
			if (levelselect.selection >= 0x00)
			{
				#if EXTRA_CHARACTERS_ACTIVE
					#if EXTRA_CHARACTERS_UNLIMITED
						if (!global.xtrachar)
					#endif
				#endif
				{	
					if (levelselect.characters == 0 || levelselect.characters == 1)
						if (Mods.isModActive("Mario (SHC 2022)"))
							Renderer.drawCustomSprite("ls_mario", getScreenWidth()-64, getScreenHeight()-44, 0x00, 0, 0x9f7e)
						else
							Renderer.drawSprite("ls_sonic", getScreenWidth()-64, getScreenHeight()-44, 0x00, 0, 0x9f7e)
					else if (levelselect.characters == 2)
						if miles_check == 0x39ab6a
							Renderer.drawCustomSprite("ls_tails", getScreenWidth()-64, getScreenHeight()-44, 0x00, 0, 0x9f7e)
						else
							Renderer.drawCustomSprite("ls_miles", getScreenWidth()-64, getScreenHeight()-44, 0x00, 0, 0x9f7e)
					else if (levelselect.characters == 3 || levelselect.characters == ExtraSlotStart-1)
						Renderer.drawCustomSprite("ls_kte", getScreenWidth()-64, getScreenHeight()-44, 0x00, 0, 0x9f7e)
				#if !EXTRA_CHARACTERS_ACTIVE
					else
					{
						if ((levelselect.characters == ExtraSlotStart+1) && Mods.isModActive("Extra Slot Mighty"))
							Renderer.drawCustomSprite("ls_mighty", getScreenWidth()-64, getScreenHeight()-44, 0x00, 0, 0x9f7e)
						else if ((levelselect.characters == ExtraSlotStart+2) && Mods.isModActive("Extra Slot Ray"))
							Renderer.drawCustomSprite("ls_ray", getScreenWidth()-64, getScreenHeight()-44, 0x00, 0, 0x9f7e)
						else Renderer.drawCustomSprite("ls_unknown", getScreenWidth()-64, getScreenHeight()-44, 0x00, 0, 0x9f7e)
					}
				}
				#else
				}
					#if EXTRA_CHARACTERS_UNLIMITED
						if (global.xtrachar)
						{
							if !(Renderer.hasCustomSprite(stringformat("em_ls_slot%d", global.xtrachar)))
							{
								u64 key = stringformat("ls_%d", global.xtrachar)
								if (global.xtrachar == 0x01 && Mods.isModActive("Extra Slot Mighty"))
									key = "ls_mighty"
								else if (global.xtrachar == 0x02 && Mods.isModActive("Extra Slot Ray"))
									key = "ls_ray"
								else if (global.xtrachar == 0x03 && Mods.isModActive("Extra Slot Amy"))
									key = "ls_amy"
								if (Renderer.hasCustomSprite(key))
									Renderer.drawSprite(key, getScreenWidth()-64, getScreenHeight()-44, 0x00, 0, 0x9f7d)
								else Renderer.drawCustomSprite("ls_characters", getScreenWidth()-64, getScreenHeight()-44, 0x00, 0, 0x9f7d)
							}
							else Renderer.drawSprite(stringformat("em_ls_slot%d", global.xtrachar), getScreenWidth()-64, getScreenHeight()-44, 0x00, 0, 0x9f7d)
						}
					#endif
				#endif
			}
			Renderer.drawCustomSprite("ls_emblem", getScreenWidth()-88, getScreenHeight()-56, 0x00, 0, 0x9f7d)
		}
	}
}

function void scareTheHaters(u64 FONT_LS)
{
	u16 beginningOfText = getScreenHeight()/2 - 80
	Renderer.drawCustomSprite("fixpriority", getScreenWidth()-200, 112, 0x00, 0, 0xFFFE)
		Renderer.drawCustomSprite("livemario", 0, 112, 0x00, 0, 0xFFFE)
		if (Mods.isModActive("Origins Title + Menu Backgrounds") || Mods.isModActive("Consistent Sonic 3"))
			Renderer.drawCustomSprite("origins_ls_priorityissue", getScreenExtend() - 40, 0, 0x00, 0, 0x1000)
		else
			Renderer.drawCustomSprite("ls_priorityissue", getScreenExtend() - 40, 0, 0x00, 0, 0x1000)
		Renderer.drawText(FONT_LS, 8, beginningOfText, "it seems there was some issues involving: ", 0xFFFFFFFF, 1, 0, 0xFFFF, true)
		if (Mods.isModActive("Sonic 3 Complete Sound Test"))
		{
			if (Mods.getModPriority("Sonic 3 A.I.R. with Extra Mushrooms") > Mods.getModPriority("Sonic 3 Complete Sound Test"))
				Renderer.drawText(FONT_LS, 8, beginningOfText + 8, "*'sonic 3 complete sound test'", 0x00FFFFFF, 1, 0, 0xFFFF, true)
		}
		if (Mods.isModActive("extended level select"))
		{
			if (Mods.isModActive("Sonic 3 Complete Sound Test"))
			{
				if (Mods.getModPriority("Sonic 3 A.I.R. with Extra Mushrooms") > Mods.getModPriority("extended level select"))
				{
					beginningOfText = beginningOfText + 8
					Renderer.drawText(FONT_LS, 8, beginningOfText + 8, "*'extended level select'", 0x00FFFFFF, 1, 0, 0xFFFF, true)
				}
			}
			else
			{
				if (Mods.getModPriority("Sonic 3 A.I.R. with Extra Mushrooms") > Mods.getModPriority("extended level select"))
				{
					Renderer.drawText(FONT_LS, 8, beginningOfText + 8, "*'extended level select'", 0x00FFFFFF, 1, 0, 0xFFFF, true)
				}
			}
		}
		Renderer.drawText(FONT_LS, 8, beginningOfText + 16, "please make the mod(s) higher in priority to:", 0xFFFFFFFF, 1, 0, 0xFFFF, true)
		Renderer.drawText(FONT_LS, 8, beginningOfText + 24, "'sonic 3 a.i.r. with extra mushrooms'", 0xFFFF00FF, 1, 0, 0xFFFF, true)
		Renderer.drawText(FONT_LS, 8, beginningOfText + 32, "or turn on the 'use base level select' option", 0xFFFFFFFF, 1, 0, 0xFFFF, true)
		Renderer.drawText(FONT_LS, 8, beginningOfText + 32, "               'use base level select'       ", 0xFF0000FF, 1, 0, 0xFFFF, true)
		Renderer.drawText(FONT_LS, 8, beginningOfText + 40, "if you wish to use that level select menu.", 0xFFFFFFFF, 1, 0, 0xFFFF, true)
		Renderer.drawText(FONT_LS, 8, beginningOfText + 48, "alternatively: disable the mod(s) if you want", 0xFFFFFFFF, 1, 0, 0xFFFF, true)
		Renderer.drawText(FONT_LS, 8, beginningOfText + 56, "to experience the extra mushrooms level select.", 0xFFFFFFFF, 1, 0, 0xFFFF, true)
}

function void LevelSelect.init()
{
	if (EM_2PSTAGES)
		levelselect.selection = 0
	#if EXTRA_CHARACTERS_ACTIVE
	if (global.xtrachar)
		levelselect.xtrachar = global.xtrachar // this fixes a very specific bug that i don't wanna talk about
	#endif
	if (YOU_FUCKED_UP_KID != 1)
		YOU_FUCKED_UP_KID = 0
	if (!LS_FORCE_BASE)
	{
		// Disable active display for now
		VDP.Config.setActiveDisplay(false)

		fn0011ca()

		// Configure VDP registers
		VDP.Config.enableHInt(false)
		VDP.Config.setNameTableBasePlaneA(0xc000)
		VDP.Config.setNameTableBasePlaneB(0xe000)
		VDP.Config.setBackdropColor(0)
		VDP.Config.setRenderingModeConfiguration(false)
		VDP.Config.setPlayfieldSizeInPixels(512, 256)
		VDP.Config.setVerticalScrolling(false, 0)	// Horizontal scrolling mode without scroll mask

		zeroMemory(0xffffac00, 0x400)
		zeroMemory(0xffffb000, 0x2000)

		u16[0xfffffb00] = 0
		u32[0xfffffbfc] = 0xfffffb00

		Enigma.decompress(0x0cab54, 0xffff0000, (sprite_attribute.PALETTE.LINE3 | (LevelSelect.Background.targetInVRAM >> 0)))
		if (!LS_BG || !Mods.isModActive("Sonic 3 Complete Level Select+"))
			copyRectToVRAM(0xffff0000, 0xe000, 0x28, 0x1c)

		zeroMemory(0xffff0000, 0x460 * 2)

		A3 = 0xffff0000
		A1 = 0x0080e6
		A5 = 0x0080c4
		D0 = 0

		D3 = 0
		fn007f62()

		ScareAwayTheHaters()

		DrawSpritesToLevelSelect()

		global.characters = levelselect.characters
		u16[0xffffff02] = 0
		global.level_started = 0
		u16[0xfffff7f0] = 0

		A2 = 0x0081b0
		LevelTilesAnim.Default()

		Level.loadNonfadingPaletteData(0x04)

		copyMemory(0xfffffcc0, 0xfffffc40, 0x20)
		zeroMemory(0xfffffc40, 0x20)

		global.demo_countdown = 1799	// 30 seconds (minus one frame)
		competition_mode.active = 0
		camera.position.x = 0
		camera.position.y = 0
		global.active_saveslot = 0
		level.giantrings_clear = 0
		checkpoint.number = 0
		global.stage_type = 0
		bluespheres.minigame_mode = 0

		u16[0xffffffe4] = 0
		u16[0xffffffe6] = 0
		global.frame_state = 0x16

	#if STANDALONE
		// Corrections for widescreen
		for (u16 base = 0xe000; base < 0xee00; base += 0x80)
		{
			for (u16 x = 0; x < 0x30; x += 2)
			{
				setVRAM(base + x + 0x50, getVRAM(base + x + 0x08))
			}
		}

		// Write sound test digits (they are missing otherwise)
		VDP.setupVRAMWrite(0xcb46)

	#endif

		waitForNextFrame()

		// Re-enable active display again
		VDP.Config.setActiveDisplay(true)
	}
	else base.LevelSelect.init()
}

function bool notExtraSlotInLevelSelect()
{
	if (Game.isSecretUnlocked(SECRET_KNUX_AND_TAILS))
		if (levelselect.characters < 5)
			return true
		else
			return false
	else if (!Game.isSecretUnlocked(SECRET_KNUX_AND_TAILS))
		if (levelselect.characters < 4)
			return true
		else
			return false
}

function bool LevelSelect.innerUpdate()
{
	//if (!initiateStandaloneCredits)
	{
		if (!LS_FORCE_BASE)
		{
			bool notExtraSlot = notExtraSlotInLevelSelect()
			Renderer.resetSprites()
			DrawSpritesToLevelSelect()
			if ((control.pad1.pressed | control.pad2.pressed) & CONTROL_START)
			{
				global.characters = levelselect.characters
				useKnucklesAndTails = (global.characters == CHARS_KNUCKLES_AND_TAILS)
				global.characters = min(global.characters, 3)
				competition_mode.character.player1 = levelselect.characters - (levelselect.characters > 0 ? 1 : 0)
				if (levelselect.selection == 0x1e)
				{
					if (fn007d6c())
					{
						lives_counter = 3
						playSound(0xaf)
						if (Mods.isModActive("Sonic 3 Complete Level Select+"))
							Renderer.drawCustomSprite("S3Complete_LevelSelectBG_S3", s16(getScreenWidth() - 512)/2, 0, 0x10, 0, 0x1000)
						return false
					}
				}
				if (levelselect.selection == 0x21)
				{
					if (Mods.isModActive("Sonic 3 Complete Level Select+"))
						Renderer.drawCustomSprite("S3Complete_LevelSelectBG_S3", s16(getScreenWidth() - 512)/2, 0, 0x10, 0, 0x1000)
					return true
				}
				if (levelselect.selection == 0x1f || levelselect.selection == 0x20)
				{
					camefromLS_SpecialStage = true
					lives_counter = 3
					// Start Blue Spheres
					if (levelselect.selection == 0x1f)
					{
						// Blue Spheres from Sonic 3
						global.sk_bluespheres = 0
					}
					else if (levelselect.selection == 0x20)
					{
						// Blue Spheres from Sonic & Knuckles
						global.sk_bluespheres = 1
					}
					// Start Blue Spheres
					global.game_mode = 0x34
					playSound(0xaf)
					global.zone_act = 0x0000
					global.zone_act.apparent = 0x0000
					if (control.pad1.state & CONTROL_A)
					{
						debug_mode.unlocked = 1
					}
					if (Mods.isModActive("Sonic 3 Complete Level Select+"))
						Renderer.drawCustomSprite("S3Complete_LevelSelectBG_S3", s16(getScreenWidth() - 512)/2, 0, 0x10, 0, 0x1000)
					return false
				}
				if (ScaredHaters != 1 && notExtraSlot)
				{
					playSound(0xaf)
					return base.LevelSelect.innerUpdate()
				}
				else if ScaredHaters != 1 && (!YOU_FUCKED_UP_KID && !notExtraSlot)
				{
					playSound(0xaf)
					return base.LevelSelect.innerUpdate()
				}
				// fun fact, this script below doesn't execute with ESCU which is really funny to me because everything works as it should
				else if (ScaredHaters != 1 && YOU_FUCKED_UP_KID)
				{
					playSound(0x7B)

					YOU_FUCKED_UP_KID = 0
					System.writeDisplayLine("Sorry! Extra Slots end up causing issues from the Title Screen's Level Select.")

					u32 backupA0 = A0
					FadeOutScreenBlocking()
					A0 = backupA0
					// Do not fade out music in this case, Data Select music is meant to kept playing
					Game.returnToMainMenu()
					yieldExecution()
					return false
				}
			}
			else if (control.pad1.pressed & CONTROL_B || Input.buttonPressed(BUTTON_BACK))
			{
				playSound(0xad)

				u32 backupA0 = A0
				if (Mods.isModActive("Sonic 3 Complete Level Select+"))
					Renderer.drawCustomSprite("S3Complete_LevelSelectBG_S3", s16(getScreenWidth() - 512)/2, 0, 0x10, 0, 0x1000)
				FadeOutScreenBlocking()
				A0 = backupA0

				// Do not fade out music in this case, Data Select music is meant to kept playing
				YOU_FUCKED_UP_KID = 0
				Game.returnToMainMenu()
				yieldExecution()
				return false
			}
			else if (Input.buttonPressed(BUTTON_Y))
			{
				if (levelselect.selection != 0x21)
				{
					levelselect.selection = 0
					if (!EM_2PSTAGES)
					{
						EM_2PSTAGES = 1
						Audio.playAudio(0x52)
					}
					else
					{
						EM_2PSTAGES = 0
						Audio.playAudio(0x7B)
					}
				}
			}
		}
	}
	return base.LevelSelect.innerUpdate()
}

function u8 BlueSpheres.getNextOpenStageIndex()
{
	if (camefromLS_SpecialStage && !(debug_mode.unlocked && (control.pad1.state & CONTROL_A)))
	{
		D0 = 0x00
		D0.u16 &= 0x07
		return D0.u8
	}
	else return base.BlueSpheres.getNextOpenStageIndex()
}

function void initializeMainGame()
{
	camefromLS_SpecialStage = false
	base.initializeMainGame()
}

//# address-hook(0x007f62) end(0x008010)
//# translated(0x008012) end(0x00803e)
function void fn007f62()
{
	if (!LS_FORCE_BASE)
	{
		A4 = 0xffff0000
		A5 = 0x008040
		A3 = A5 + levelselect.selection * 4
		D0 = u32(u8[A3]) * 0x50 + u8[A3 + 1]
		A1 = A4 + D0.s16

		D1 = u32(u8[A3]) * 0x80 + u8[A3 + 1]
		D1.u16 += 0xc000

		for (u8 i = 0; i < 0x0f; ++i)
		{
			D0.u16 = u16[A1] + D3.u16
			A1 += 2
		}

		A3 += 2
		D0 = u8[A3]
		if (D0.u8 != 0)
		{
			D0 = u32(D0.u16) * 0x50 + u8[A3 + 1]
			A1 = A4 + D0.u16

			D1 = 0xc000 + u8[A3] * 0x80 + u8[A3 + 1]
			D0.u16 = u16[A1] + D3.u16
			A1 += 2
		}
	}
	else base.fn007f62()
}
//# translated(0x007d6c) end(0x007e62)
function bool fn007d6c()
{
	if (!LS_FORCE_BASE)
	{
		if (levelselect.selection == 0x1a) // "Doomsday"
		{
			D0.u16 = 0x1700 // go to DEZ2 boss
		}
		else if (levelselect.selection == 0x1b) // "DEZ2"
		{
			D0.u16 = 0x0c00 // go to Doomsday
		}
		if (levelselect.selection == 0x1c) // Gachapon
		{
			D0.u16 = 0x1300
			Nemesis.loadDataToVRAM(0x1927fe, 0x9280)
		}
		else if (levelselect.selection == 0x1d && LS_BONUS != 2 || levelselect.selection == 0x1e && (LS_BONUS == 2 || Mods.isModActive("Sonic 3 Complete Level Select+"))) // Rotating
			D0.u16 = 0x1500
		else if (levelselect.selection == 0x1e && LS_BONUS != 2 || levelselect.selection == 0x1d && LS_BONUS == 2) // Spheres
			D0.u16 = 0x1400
		if (EM_2PSTAGES)
		{
			if (levelselect.selection == 0x00) // ALZ
				D0.u16 = 0x0e00
			else if (levelselect.selection == 0x01) // BPZ
				D0.u16 = 0x0f00
			else if (levelselect.selection == 0x02) // CGZ
				D0.u16 = 0x1100
			else if (levelselect.selection == 0x03) // DPZ
				D0.u16 = 0x1000
			else if (levelselect.selection == 0x04) // EMZ
				D0.u16 = 0x1200
			else if (levelselect.selection == 0x05) // Altar
				D0.u16 = 0x1701
			else if (levelselect.selection == 0x06) // Ending
				D0.u16 = 0x0d01
			/*
			else if (levelselect.selection == 0x07) // S3 Credits
			{
				initiateStandaloneCredits = 1
				EntryFunctions.levelSelect()
				return true
			}
			*/
			// it was decent but i don't think it should be in the mod.
		}
		else if (LS_ZONEORDER)
		{
			if (levelselect.selection == 0x08) // ICZ 1
				D0.u16 = 0x0400 // send to FBZ 1
			else if (levelselect.selection == 0x09) // ICZ 2
				D0.u16 = 0x0401 // send to FBZ 2
			else if (levelselect.selection == 0x0a) // LBZ 1
				D0.u16 = 0x0500 // send to ICZ 1
			else if (levelselect.selection == 0x0b) // LBZ 2
				D0.u16 = 0x0501 // send to ICZ 2
			else if (levelselect.selection == 0x0c) // MHZ 1
				D0.u16 = 0x0600 // send to LBZ 1
			else if (levelselect.selection == 0x0d) // MHZ 2
				D0.u16 = 0x0601 // send to LBZ 2
			else if (levelselect.selection == 0x0e) // FBZ 1
				D0.u16 = 0x0700 // send to MHZ 1
			else if (levelselect.selection == 0x0f) // FBZ 2
				D0.u16 = 0x0701 // send to MHZ 2
		}
	}
	return base.fn007d6c()
}
function void fn007e64()
{
	if (!LS_FORCE_BASE)
	{
		bool skipPart = false
		if ((control.pad1.pressed & (CONTROL_UP | CONTROL_DOWN)) == 0)
		{
			--u16[0xffffff80]
			skipPart = (s16[0xffffff80] >= 0)
		}

		if (!skipPart)
		{
			u16[0xffffff80] = 11
			if (control.pad1.state & CONTROL_UP)
			{
				if (levelselect.selection == 0x21 && EM_2PSTAGES)
					levelselect.selection = 0x06
				else
				{
					--levelselect.selection
					if (s16(levelselect.selection) < 0)
						levelselect.selection = 0x21
				}
			}
			if (control.pad1.state & CONTROL_DOWN)
			{
				if (levelselect.selection == 0x06 && EM_2PSTAGES)
					levelselect.selection = 0x21
				else
				{
					++levelselect.selection
					if (levelselect.selection > 0x21)
						levelselect.selection = 0
				}
			}
			return
		}

		if (levelselect.selection == 0x21)
		{
			// Sound test
			if (control.pad1.pressed & CONTROL_LEFT)
			{
				if (levelselect.soundtest > 0)
					--levelselect.soundtest
			}
			if (control.pad1.pressed & CONTROL_RIGHT)
			{
				levelselect.soundtest = (levelselect.soundtest + 1) & 0xff
			}
			if (control.pad1.pressed & CONTROL_A)
			{
				if (ST_STYLE == 0)
					levelselect.soundtest = (levelselect.soundtest + 0x10) & 0xff
				else
					levelselect.soundtest = (levelselect.soundtest + 0x0a) & 0xff
			}
			if (Input.buttonPressed(BUTTON_Y))
			{
				if (ST_STYLE == 0)
					levelselect.soundtest = (levelselect.soundtest - 0x10) & 0xff
				else
					levelselect.soundtest = (levelselect.soundtest - 0x0a) & 0xff
			}
			if (control.pad1.pressed & CONTROL_C)
			{
				if (ScaredHaters == 0)
				{
					if (LS_MUSIC != 0 && (levelselect.soundtest < 0x33 || levelselect.soundtest >= 0xf0)) // 0xf0 fix provided by Lean
						playMusic(MUSIC_CTRL_STOP)
					if (LS_MUSIC != 0 && levelselect.soundtest == 0xfe)
						playLevelSelectMusic()
					else
						playMusic(levelselect.soundtest)
				}
				EM.checkCheats()
			}
			if (control.pad1.pressed & CONTROL_B)
			{
				playMusic(0xe3)
			}
		}
		else
		{
			if (control.pad1.pressed & (CONTROL_LEFT | CONTROL_RIGHT) && !EM_2PSTAGES)
			{
				u8 location = u8[0x007f22 + levelselect.selection]
				if (levelselect.selection == 0x02 || levelselect.selection == 0x08 || (levelselect.selection >= 0x0c && levelselect.selection <= 0x11))
					location++
				if (levelselect.selection == 0x14 || levelselect.selection == 0x15 || levelselect.selection == 0x1a || levelselect.selection == 0x1b || levelselect.selection == 0x1e || levelselect.selection == 0x1f || levelselect.selection == 0x20)
					location--
				levelselect.selection = location
				if (levelselect.selection == 0x20 && location != 0x20)
					++levelselect.selection
			}

			if (control.pad1.pressed & CONTROL_C)
			{
				#if EXTRA_CHARACTERS_ACTIVE
					#if EXTRA_CHARACTERS_UNLIMITED
					u8 maxCharacterSelection = Game.isSecretUnlocked(SECRET_KNUX_AND_TAILS) ? 0x04 : 0x03
							
					if (levelselect.characters < maxCharacterSelection && !levelselect.xtrachar)
					{
						++levelselect.characters
						if (levelselect.characters > maxCharacterSelection)
						levelselect.characters = 0x00
					}
					else
					{
						levelselect.xtrachar = true
					}
					if (levelselect.xtrachar)
					{
						if (global.xtrachar < ExtraChar.getHighestSlot())
						{
							for (u8 i = CHARACTER_SLOT1; i <= CHARACTER_SLOT255; ++i)
							{
								if (Renderer.hasCustomSprite(stringformat("dataSel_slot%d", i)) && i > global.xtrachar)
								{
									global.xtrachar = i
									levelselect.characters = CHARS_SONIC_ALONE
									ExtraChar.startupWithExtraChar()
									break
								}

								if (i == CHARACTER_SLOT255)
									break
							}
						}
						// If the extra variable is equal to the highest slot, then reset the variables and go to the next default slot
						else
						{
							global.xtrachar = CHARACTER_UNSET
							levelselect.characters = 0x00
							levelselect.xtrachar = false
						}
					}
					#endif
				#else
						u8 maxCharacterSelection = WhatWillItBe(3)
						// Knuckles & Tails
						if (Game.isSecretUnlocked(SECRET_KNUX_AND_TAILS))
						{
							maxCharacterSelection = WhatWillItBe(4)
						}
						++levelselect.characters
						if (levelselect.characters > maxCharacterSelection)
							levelselect.characters = 0
				#endif
			}
		}
	}
	else base.fn007e64()
}

function void EM.checkCheats()
{
	// Chaos/Super Emerald checking
	if (EM_CHAOSEMERALDS == 0 && levelselect.soundtest == 0x04)
	{
		EM_CHAOSEMERALDS = 1
		return
	}
	if (EM_CHAOSEMERALDS == 1 && levelselect.soundtest == 0x01)
	{
		EM_CHAOSEMERALDS = 2
		return
	}
	if (EM_CHAOSEMERALDS == 2 && levelselect.soundtest == 0x02)
	{
		EM_CHAOSEMERALDS = 3
		return
	}
	if (EM_CHAOSEMERALDS == 3 && levelselect.soundtest == 0x06)
	{
		playMusic(MUSIC_CTRL_STOP)
		EM_CHAOSEMERALDS = 4
		global.chaos_emeralds = 7 // Give the Chaos Emeralds
		Audio.playAudio(0x2B) // Chaos Emerald Sound
		System.writeDisplayLine("7 CHAOS EMERALDS IN HAND") // Make-believes reborn
		for (u8 i = 1; i <= 7; i++)
			u8[0xffffffb2 + (i - 1)] = 0x01
		return
	}
	else if (EM_CHAOSEMERALDS == 4 && levelselect.soundtest == 0x04)
	{
		EM_CHAOSEMERALDS = 5
		return
	}
	else if (EM_CHAOSEMERALDS == 5 && levelselect.soundtest == 0x01)
	{
		EM_CHAOSEMERALDS = 6
		return
	}
	else if (EM_CHAOSEMERALDS == 6 && levelselect.soundtest == 0x02)
	{
		EM_CHAOSEMERALDS = 7
		return
	}
	else if (EM_CHAOSEMERALDS == 7 && levelselect.soundtest == 0x06)
	{
		playMusic(MUSIC_CTRL_STOP)
		EM_CHAOSEMERALDS = 8
		Audio.playAudio(0x2B) // Chaos Emerald Sound
		Audio.playAudio(0xAC) // Continue Sound
		global.super_emeralds = 7 // Give the Super Emeralds
		global.traded_emeralds = 7 // Gives all Traded Emeralds so the Super Rings do the color cycling
		System.writeDisplayLine("7 SUPER EMERALDS IN HAND") // Legends blurred and torn
		for (u8 i = 1; i <= 7; i++)
			u8[0xffffffb2 + (i - 1)] = 0x03
		return
	}
	else
	{
		if (EM_CHAOSEMERALDS <= 3)
		{
			if (levelselect.soundtest != 0x04)
				EM_CHAOSEMERALDS = 0
			else
				EM_CHAOSEMERALDS = 1
		}
		else if (EM_CHAOSEMERALDS <= 7)
		{
			if (levelselect.soundtest != 0x04)
				EM_CHAOSEMERALDS = 4
			else
				EM_CHAOSEMERALDS = 5
		}
		else
			EM_CHAOSEMERALDS = 8
		return
	}
}

function u8 WhatWillItBe(u8 maxCharacterSelection)
{
	#if !EXTRA_CHARACTERS_ACTIVE
		if (Mods.isModActive("Extra Characters Base") || Mods.isModActive("Extra Character Slots"))
			return base.WhatWillItBe(maxCharacterSelection)
		else
	#endif
			return maxCharacterSelection
}